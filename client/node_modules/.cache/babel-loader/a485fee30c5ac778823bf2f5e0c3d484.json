{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var initialState={toDos:[],toDo:undefined,loading:false,error:undefined};var toDoSlice=createSlice({name:\"ToDos\",initialState:initialState,reducers:{onGetToDosStart:function onGetToDosStart(state){state.loading=true;},onGetToDosSuccess:function onGetToDosSuccess(state,action){state.toDos=action.payload;state.loading=false;},onGetToDosError:function onGetToDosError(state,action){state.error=action.payload;state.loading=false;},onGetToDoStart:function onGetToDoStart(state){state.loading=true;},onGetToDoSuccess:function onGetToDoSuccess(state,action){state.toDo=action.payload;state.loading=false;},onGetToDoError:function onGetToDoError(state,action){state.error=action.payload;state.loading=false;}}});var _toDoSlice$actions=toDoSlice.actions,onGetToDosStart=_toDoSlice$actions.onGetToDosStart,onGetToDosSuccess=_toDoSlice$actions.onGetToDosSuccess,onGetToDosError=_toDoSlice$actions.onGetToDosError,onGetToDoStart=_toDoSlice$actions.onGetToDoStart,onGetToDoSuccess=_toDoSlice$actions.onGetToDoSuccess,onGetToDoError=_toDoSlice$actions.onGetToDoError;export{onGetToDosStart,onGetToDosSuccess,onGetToDosError,onGetToDoStart,onGetToDoSuccess,onGetToDoError};export var reducer=toDoSlice.reducer;","map":{"version":3,"sources":["/Users/pedrosousa/WorkEqual/Tests/react-hooks-and-stuff/client/src/state/toDosSlice.ts"],"names":["createSlice","initialState","toDos","toDo","undefined","loading","error","toDoSlice","name","reducers","onGetToDosStart","state","onGetToDosSuccess","action","payload","onGetToDosError","onGetToDoStart","onGetToDoSuccess","onGetToDoError","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CAUA,GAAMC,CAAAA,YAAuB,CAAG,CAC9BC,KAAK,CAAE,EADuB,CAE9BC,IAAI,CAAEC,SAFwB,CAG9BC,OAAO,CAAE,KAHqB,CAI9BC,KAAK,CAAEF,SAJuB,CAAhC,CAOA,GAAMG,CAAAA,SAAS,CAAGP,WAAW,CAAC,CAC5BQ,IAAI,CAAE,OADsB,CAE5BP,YAAY,CAAZA,YAF4B,CAG5BQ,QAAQ,CAAE,CACRC,eAAe,CAAE,yBAAAC,KAAK,CAAI,CACxBA,KAAK,CAACN,OAAN,CAAgB,IAAhB,CACD,CAHO,CAIRO,iBAAiB,CAAE,2BAACD,KAAD,CAAQE,MAAR,CAA0C,CAC3DF,KAAK,CAACT,KAAN,CAAcW,MAAM,CAACC,OAArB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAPO,CAQRU,eAAe,CAAE,yBAACJ,KAAD,CAAQE,MAAR,CAA0C,CACzDF,KAAK,CAACL,KAAN,CAAcO,MAAM,CAACC,OAArB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAXO,CAYRW,cAAc,CAAE,wBAAAL,KAAK,CAAI,CACvBA,KAAK,CAACN,OAAN,CAAgB,IAAhB,CACD,CAdO,CAeRY,gBAAgB,CAAE,0BAACN,KAAD,CAAQE,MAAR,CAAwC,CACxDF,KAAK,CAACR,IAAN,CAAaU,MAAM,CAACC,OAApB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAlBO,CAmBRa,cAAc,CAAE,wBAACP,KAAD,CAAQE,MAAR,CAA0C,CACxDF,KAAK,CAACL,KAAN,CAAcO,MAAM,CAACC,OAArB,CACAH,KAAK,CAACN,OAAN,CAAgB,KAAhB,CACD,CAtBO,CAHkB,CAAD,CAA7B,C,uBAoCIE,SAAS,CAACY,O,CANZT,e,oBAAAA,e,CACAE,iB,oBAAAA,iB,CACAG,e,oBAAAA,e,CACAC,c,oBAAAA,c,CACAC,gB,oBAAAA,gB,CACAC,c,oBAAAA,c,0GAGF,MAAO,IAAME,CAAAA,OAAO,CAAGb,SAAS,CAACa,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { ToDo } from \"../api/domain\"\n\ninterface ToDoState {\n  toDos: ToDo[]\n  toDo: ToDo | undefined\n  loading: boolean\n  error: string | undefined\n}\n\nconst initialState: ToDoState = {\n  toDos: [],\n  toDo: undefined,\n  loading: false,\n  error: undefined,\n}\n\nconst toDoSlice = createSlice({\n  name: \"ToDos\",\n  initialState,\n  reducers: {\n    onGetToDosStart: state => {\n      state.loading = true\n    },\n    onGetToDosSuccess: (state, action: PayloadAction<ToDo[]>) => {\n      state.toDos = action.payload\n      state.loading = false\n    },\n    onGetToDosError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload\n      state.loading = false\n    },\n    onGetToDoStart: state => {\n      state.loading = true\n    },\n    onGetToDoSuccess: (state, action: PayloadAction<ToDo>) => {\n      state.toDo = action.payload\n      state.loading = false\n    },\n    onGetToDoError: (state, action: PayloadAction<string>) => {\n      state.error = action.payload\n      state.loading = false\n    },\n  },\n})\n\nexport const {\n  onGetToDosStart,\n  onGetToDosSuccess,\n  onGetToDosError,\n  onGetToDoStart,\n  onGetToDoSuccess,\n  onGetToDoError,\n} = toDoSlice.actions\n\nexport const reducer = toDoSlice.reducer\n"]},"metadata":{},"sourceType":"module"}