{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pedrosousa/WorkEqual/Tests/react-hooks-and-stuff/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pedrosousa/WorkEqual/Tests/react-hooks-and-stuff/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useContext,useEffect}from\"react\";import{EnvironmentContext}from\"../Environment\";import{useDispatch,useSelector}from\"react-redux\";import{onGetToDosStart,onGetToDosError,onGetToDosSuccess,onGetToDoStart,onGetToDoError,onGetToDoSuccess}from\"../state/toDosSlice\";import{pipe}from\"fp-ts/lib/pipeable\";import{task}from\"fp-ts/lib/Task\";import{fold}from\"fp-ts/lib/TaskEither\";export var useFetchToDos=function useFetchToDos(){var _useContext=useContext(EnvironmentContext),toDoApi=_useContext.toDoApi;var dispatch=useDispatch();useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(onGetToDosStart());_context.next=3;return pipe(toDoApi.getAll(),fold(function(error){dispatch(onGetToDosError(error.message));return task.of(undefined);},function(toDos){dispatch(onGetToDosSuccess(toDos));return task.of(undefined);}))();case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref.apply(this,arguments);};}();fetch();},[dispatch,toDoApi]);var _useSelector=useSelector(function(state){return state.toDos;}),toDos=_useSelector.toDos,loading=_useSelector.loading,error=_useSelector.error;return{toDos:toDos,loading:loading,error:error};};export var useFetchToDo=function useFetchToDo(id){var _useContext2=useContext(EnvironmentContext),toDoApi=_useContext2.toDoApi;var dispatch=useDispatch();useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(onGetToDoStart());_context2.next=3;return pipe(toDoApi.getOne(id),fold(function(error){dispatch(onGetToDoError(error.message));return task.of(undefined);},function(toDo){dispatch(onGetToDoSuccess(toDo));return task.of(undefined);}))();case 3:return _context2.abrupt(\"return\",_context2.sent);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function fetch(){return _ref2.apply(this,arguments);};}();fetch();},[dispatch,toDoApi,id]);var _useSelector2=useSelector(function(state){return state.toDos;}),toDo=_useSelector2.toDo,loading=_useSelector2.loading,error=_useSelector2.error;return{toDo:toDo,loading:loading,error:error};};","map":{"version":3,"sources":["/Users/pedrosousa/WorkEqual/Tests/react-hooks-and-stuff/client/src/api/hooks.ts"],"names":["useContext","useEffect","EnvironmentContext","useDispatch","useSelector","onGetToDosStart","onGetToDosError","onGetToDosSuccess","onGetToDoStart","onGetToDoError","onGetToDoSuccess","pipe","task","fold","useFetchToDos","toDoApi","dispatch","fetch","getAll","error","message","of","undefined","toDos","state","loading","useFetchToDo","id","getOne","toDo"],"mappings":"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","sourcesContent":["import { useContext, useEffect } from \"react\"\nimport { EnvironmentContext } from \"../Environment\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  onGetToDosStart,\n  onGetToDosError,\n  onGetToDosSuccess,\n  onGetToDoStart,\n  onGetToDoError,\n  onGetToDoSuccess,\n} from \"../state/toDosSlice\"\nimport { pipe } from \"fp-ts/lib/pipeable\"\nimport { task } from \"fp-ts/lib/Task\"\nimport { RootState } from \"../state/rootReducer\"\nimport { fold } from \"fp-ts/lib/TaskEither\"\n\nexport const useFetchToDos = () => {\n  const { toDoApi } = useContext(EnvironmentContext)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const fetch = async () => {\n      dispatch(onGetToDosStart())\n      return await pipe(\n        toDoApi.getAll(),\n        fold(\n          error => {\n            dispatch(onGetToDosError(error.message))\n            return task.of(undefined)\n          },\n          toDos => {\n            dispatch(onGetToDosSuccess(toDos))\n            return task.of(undefined)\n          },\n        ),\n      )()\n    }\n    fetch()\n  }, [dispatch, toDoApi])\n\n  const { toDos, loading, error } = useSelector((state: RootState) => state.toDos)\n  return { toDos, loading, error }\n}\n\nexport const useFetchToDo = (id: number) => {\n  const { toDoApi } = useContext(EnvironmentContext)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const fetch = async () => {\n      dispatch(onGetToDoStart())\n      return await pipe(\n        toDoApi.getOne(id),\n        fold(\n          error => {\n            dispatch(onGetToDoError(error.message))\n            return task.of(undefined)\n          },\n          toDo => {\n            dispatch(onGetToDoSuccess(toDo))\n            return task.of(undefined)\n          },\n        ),\n      )()\n    }\n    fetch()\n  }, [dispatch, toDoApi, id])\n\n  const { toDo, loading, error } = useSelector((state: RootState) => state.toDos)\n  return { toDo, loading, error }\n}\n"]},"metadata":{},"sourceType":"module"}