{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @since 2.0.0\n */\n\nfunction identity(a) {\n  return a;\n}\n\nexports.identity = identity;\n/**\n * @since 2.0.0\n */\n\nexports.unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\n\nfunction not(predicate) {\n  return function (a) {\n    return !predicate(a);\n  };\n}\n\nexports.not = not;\n/**\n * @since 2.0.0\n */\n\nfunction constant(a) {\n  return function () {\n    return a;\n  };\n}\n\nexports.constant = constant;\n/**\n * A thunk that returns always `true`\n *\n * @since 2.0.0\n */\n\nexports.constTrue = function () {\n  return true;\n};\n/**\n * A thunk that returns always `false`\n *\n * @since 2.0.0\n */\n\n\nexports.constFalse = function () {\n  return false;\n};\n/**\n * A thunk that returns always `null`\n *\n * @since 2.0.0\n */\n\n\nexports.constNull = function () {\n  return null;\n};\n/**\n * A thunk that returns always `undefined`\n *\n * @since 2.0.0\n */\n\n\nexports.constUndefined = function () {\n  return;\n};\n/**\n * A thunk that returns always `void`\n *\n * @since 2.0.0\n */\n\n\nexports.constVoid = function () {\n  return;\n};\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\n\n\nfunction flip(f) {\n  return function (b, a) {\n    return f(a, b);\n  };\n}\n\nexports.flip = flip;\n\nfunction flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n  switch (arguments.length) {\n    case 1:\n      return ab;\n\n    case 2:\n      return function () {\n        return bc(ab.apply(this, arguments));\n      };\n\n    case 3:\n      return function () {\n        return cd(bc(ab.apply(this, arguments)));\n      };\n\n    case 4:\n      return function () {\n        return de(cd(bc(ab.apply(this, arguments))));\n      };\n\n    case 5:\n      return function () {\n        return ef(de(cd(bc(ab.apply(this, arguments)))));\n      };\n\n    case 6:\n      return function () {\n        return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n      };\n\n    case 7:\n      return function () {\n        return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n      };\n\n    case 8:\n      return function () {\n        return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n      };\n\n    case 9:\n      return function () {\n        return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n      };\n  }\n}\n\nexports.flow = flow;\n/**\n * @since 2.0.0\n */\n\nfunction tuple() {\n  var t = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    t[_i] = arguments[_i];\n  }\n\n  return t;\n}\n\nexports.tuple = tuple;\n/**\n * @since 2.0.0\n */\n\nfunction increment(n) {\n  return n + 1;\n}\n\nexports.increment = increment;\n/**\n * @since 2.0.0\n */\n\nfunction decrement(n) {\n  return n - 1;\n}\n\nexports.decrement = decrement;\n/**\n * @since 2.0.0\n */\n\nfunction absurd(_) {\n  throw new Error('Called `absurd` function which should be uncallable');\n}\n\nexports.absurd = absurd;","map":null,"metadata":{},"sourceType":"script"}